---
import { getCollection } from 'astro:content';
import { render } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCaseStudies } from '../../lib/case-studies';
import { Card, CardHeader, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { LinkedInLogoIcon } from "@radix-ui/react-icons";
import { Badge } from "@/components/ui/badge";

export async function getStaticPaths() {
  const team = await getCollection('team');
  return team.map(entry => ({
    params: { id: entry.id },  // Changed from slug to id
    props: { entry },
  }));
}

const { entry } = Astro.props as { entry: CollectionEntry<'team'> };
const { Content } = await render(entry);  // Changed from entry.render() to render(entry)

// Get case studies this team member is involved in
const allCaseStudies = await getCaseStudies();
const relatedCaseStudies = allCaseStudies.filter(
  study => study.data.team?.includes(entry.id)  // Make sure this matches your case studies schema
);
---

<BaseLayout title={entry.data.name}>
  <article class="max-w-4xl mx-auto">
    <!-- Header Section -->
    <div class="flex flex-col md:flex-row gap-8 mb-12">
      <!-- Profile Image -->
      {entry.data.profileImage && (  <!-- Changed from photo to profileImage to match schema -->
        <div class="w-full md:w-1/3">
          <img
            src={entry.data.profileImage}
            alt={entry.data.name}
            class="w-full aspect-square object-cover rounded-lg shadow-lg"
          />
        </div>
      )}
      
      <!-- Profile Info -->
      <div class="flex-1">
        <h1 class="text-4xl font-bold mb-2">{entry.data.name}</h1>
        <p class="text-xl text-muted-foreground mb-4">{entry.data.role}</p>
        <p class="mb-6">{entry.data.bio}</p>
        
        <!-- Contact/Social Links -->
        <div class="flex gap-4">
          {entry.data.socialLinks?.email && (
            <Button variant="outline" asChild>
              <a href={`mailto:${entry.data.socialLinks.email}`}>
                Contact
              </a>
            </Button>
          )}
          {entry.data.socialLinks?.linkedin && (
            <Button variant="outline" asChild>
              <a 
                href={entry.data.socialLinks.linkedin}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2"
              >
                <LinkedInLogoIcon className="h-5 w-5" />
                LinkedIn
              </a>
            </Button>
          )}
        </div>
      </div>
    </div>

    <!-- Extended Bio/Content -->
    <div class="prose prose-slate max-w-none mb-12">
      <Content />
    </div>

    <!-- Related Case Studies -->
    {relatedCaseStudies.length > 0 && (
      <section class="border-t pt-8">
        <h2 class="text-2xl font-semibold mb-6">Case Studies</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {relatedCaseStudies.map(study => (
            <Card>
              <CardHeader>
                <h3 class="text-xl font-semibold">{study.data.title}</h3>
              </CardHeader>
              <CardContent>
                <p class="text-muted-foreground mb-4">{study.data.description}</p>
                <div class="flex flex-wrap gap-2">
                  {study.data.tags.technologies.map(tag => (  // Updated to match case study schema
                    <Badge variant="secondary">{tag}</Badge>
                  ))}
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </section>
    )}
  </article>
</BaseLayout>