---
import { getCollection, getEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { Card, CardHeader, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { ArrowLeft, ArrowRight } from 'lucide-react';
import Hero from '@/components/Hero.astro';
import { render } from 'astro:content';
import Breadcrumb from '@/components/Breadcrumb';

export async function getStaticPaths() {
  const newsItems = await getCollection('news');
  return newsItems.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Format date in Dutch
const formattedDate = new Date(entry.data.date).toLocaleDateString('nl-NL', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

// Breadcrumb items for news story
const breadcrumbItems = [
  { label: 'Over ons', href: '/about' },
  { label: 'Nieuws', href: '/news' },
  { label: entry.data.title },
];

// Get all news posts and sort them by date
const allNews = await getCollection('news');
const sortedNews = allNews.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Find current post index
const currentIndex = sortedNews.findIndex((post) => post.id === Astro.props.entry.id);

// Get prev and next posts
const prevNews = currentIndex < sortedNews.length - 1 ? sortedNews[currentIndex + 1] : null;
const nextNews = currentIndex > 0 ? sortedNews[currentIndex - 1] : null;

// Format date function
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return new Intl.DateTimeFormat('nl-NL', {
    day: 'numeric',
    month: 'long',
    year: 'numeric',
  }).format(date);
};
---

<BaseLayout title={`${entry.data.title}`}>
  <Breadcrumb items={breadcrumbItems} client:load />

  <Hero
    variant="small"
    subtitle={formattedDate}
    title={entry.data.title}
    description={entry.data.summary}
  >
    {
      entry.data.image && (
        <div class="w-full aspect-[16/9] lg:aspect-auto lg:h-full">
          <img
            src={entry.data.image.src}
            alt={entry.data.image.alt}
            class="w-full h-full object-cover rounded-lg"
          />
        </div>
      )
    }
  </Hero>

  <div class="flex justify-start mt-12">
    <article class="prose prose-invert max-w-[50ch]">
      <Content />
    </article>
  </div>

  <!-- Navigation -->
  <nav class="grid grid-cols-2 gap-4 border-t border-border/50 pt-8 mt-20">
    {
      prevNews && (
        <a
          href={`/news/${prevNews.id.split('/').pop()?.replace('.md', '')}`}
          class="group flex items-center gap-3 hover:text-primary transition-colors"
        >
          <ArrowLeft className="h-4 w-4" />
          <div>
            <div class="text-sm text-text-secondary">{formatDate(prevNews.data.date)}</div>
            <div class="font-medium group-hover:text-primary transition-colors">
              {prevNews.data.title}
            </div>
          </div>
        </a>
      )
    }

    {
      nextNews && (
        <a
          href={`/news/${nextNews.id.split('/').pop()?.replace('.md', '')}`}
          class="group flex items-center justify-end gap-3 hover:text-primary transition-colors ml-auto"
        >
          <div class="text-right">
            <div class="text-sm text-text-secondary">{formatDate(nextNews.data.date)}</div>
            <div class="font-medium group-hover:text-primary transition-colors">
              {nextNews.data.title}
            </div>
          </div>
          <ArrowRight className="h-4 w-4" />
        </a>
      )
    }
  </nav>
</BaseLayout>

<style>
  .prose {
    --tw-prose-headings: theme('colors.text.primary');
    --tw-prose-body: theme('colors.text.secondary');
    --tw-prose-bold: theme('colors.text.primary');
    --tw-prose-quotes: theme('colors.text.secondary');
    --tw-prose-quote-borders: theme('colors.primary.DEFAULT');
    --tw-prose-captions: theme('colors.text.tertiary');
    --tw-prose-hr: theme('colors.surface.2');
    --tw-prose-links: theme('colors.primary.DEFAULT');
    --tw-prose-counters: theme('colors.text.tertiary');
    --tw-prose-bullets: theme('colors.text.tertiary');
  }

  .prose :deep(h1),
  .prose :deep(h2),
  .prose :deep(h3),
  .prose :deep(h4) {
    scroll-margin-top: 100px;
  }

  .prose :deep(a) {
    text-decoration-line: none;
    border-bottom: 1px solid theme('colors.primary.DEFAULT');
    transition: border-color 0.2s ease;
  }

  .prose :deep(a:hover) {
    border-color: transparent;
  }
</style>
