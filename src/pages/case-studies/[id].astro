---
// src/pages/case-studies/[id].astro
import ESRSLayout from '../../layouts/ESRSLayout.astro';
import ModernCaseStudyLayout from '../../layouts/ModernCaseStudyLayout.astro';
import { getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const caseStudies = await getCollection('case-studies');
  return caseStudies.map(entry => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

// Get related case studies
const allCaseStudies = await getCollection('case-studies');
const relatedCaseStudies = allCaseStudies
  .filter(cs => 
    cs.id !== entry.id && 
    cs.data.tags.industries.some(industry => 
      entry.data.tags.industries.includes(industry)
    )
  )
  .slice(0, 3);

// Transform legacy data to new format if needed
const metadata = {
  client: entry.data.metadata?.client || entry.data.author,
  date: entry.data.metadata?.date || entry.data.date.toLocaleDateString('nl-NL', { year: 'numeric', month: 'long' }),
  services: entry.data.metadata?.services || [entry.data.service_category].filter(Boolean),
  website: entry.data.metadata?.website
};

// Build the modern case study props while maintaining backwards compatibility
const props = {
  title: entry.data.title,
  introduction: entry.data.introduction,
  metadata: entry.data.metadata,
  heroVideo: entry.data.heroVideo,
  expandableContent: entry.data.expandableContent,
  quotes: entry.data.quotes,
  images: entry.data.images,
  beforeAfter: entry.data.beforeAfter,
  teamMember: entry.data.teamMember,
  timeline: entry.data.timeline,
  relatedCaseStudies
};
---

  <ModernCaseStudyLayout {...props}>
    <div class="container mx-auto px-6 py-16">
      <div class="prose prose-lg prose-invert max-w-none">
        <Content />
      </div>
    </div>
  </ModernCaseStudyLayout>
