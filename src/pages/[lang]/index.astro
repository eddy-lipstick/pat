---
// src/pages/[lang]/index.astro
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getFeaturedCaseStudies } from '../../lib/case-studies';
import { getLangFromUrl } from '@/i18n/utils';
import { landingTranslations } from '@/i18n/translations/landing';
import NameExplanationCard from '@/components/NameExplanationCard';

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import ServicesGrid from '../../components/services/ServicesGrid.astro';
import { getCollection } from 'astro:content';

import BubbleMap from '../../components/bubbles/BubbleMap'; // Re-add import
import LogoGrid from '../../components/LogoGrid.astro';
import { ArrowRight, MessageCircle } from 'lucide-react';
import VideoTestimonials from '../../components/VideoTestimonials';
import OurFormula from '../../components/OurFormula';
import TeamSection from '../../components/TeamSection'; // Keep TeamSection import
import Hero from '@/components/Hero.astro';
import Partners from '../../components/Partners.astro';
import SectionHeader from '@/components/SectionHeader.astro';
import DigitalStudioSection from '@/components/digital-studio/DigitalStudioSection.astro';

import type { CollectionEntry } from 'astro:content';

// Get current language from URL
const currentLang = getLangFromUrl(Astro.url);
// Add type assertion for currentLang
const t = landingTranslations[currentLang as 'en' | 'nl'];

const { lang } = Astro.params as { lang: 'en' | 'nl' }; // Assert type for lang from params

// Generate static paths for each language
export function getStaticPaths() {
  return [{ params: { lang: 'en' } }, { params: { lang: 'nl' } }];
}

// teamMembers variable removed as TeamSection component doesn't accept it

const featuredCaseStudies = await getFeaturedCaseStudies();

// Get all case studies for current language
const allCaseStudies = await getCollection('case-studies', (entry) => {
  return entry.id.startsWith(currentLang + '/');
});

// Removed bubbleMapCaseStudies and processedStudies as 'stakeholder' field doesn't exist
// and study.rendered() access was incorrect. BubbleMap component also removed below.
---

<BaseLayout title={t.meta.title} description={t.meta.description}>
  {/* Hero Section */}
  <Hero
    class="min-h-screen"
    subtitle={t.hero.subtitle}
    title={t.hero.title}
    description={t.hero.description}
    bulletPoints={t.hero.bulletPoints}
    primaryButtonText={t.hero.buttons.primary}
    primaryButtonHref={`/${currentLang}/case-studies`}
  >
    {/* Re-adding BubbleMap */}
    <div class="h-full hidden lg:block z-20 translate-x-32 translate-y-10">
      <BubbleMap client:load lang={lang} />
    </div>
  </Hero>

  {
    lang === 'en' && (
      <div>
        <NameExplanationCard />
      </div>
    )
  }

  <LogoGrid lang={currentLang} />

  <ServicesGrid lang={currentLang} />

  {/* Digital Studio Section */}
  <DigitalStudioSection lang={currentLang} />

  <Partners lang={currentLang} />
  {/* TeamSection called without teamMembers prop */}
  <TeamSection lang={currentLang} client:load />
</BaseLayout>
