---
// src/pages/[lang]/digital-studio/[slug].astro
import DigitalProductLayout from '@/layouts/DigitalProductLayout.astro';
import { getCollection, render } from 'astro:content';
import { getLangFromUrl } from '@/i18n/utils';
import { languages } from '@/i18n/config'; // Import languages config
import { digitalStudioTranslations } from '@/i18n/translations/digital-studio';

// Define Language type from config keys
type Language = keyof typeof languages;

export async function getStaticPaths() {
  // Get all digital studio products
  const allProducts = await getCollection('digital-studio');

  const paths = [];

  // Generate paths for each language and product
  for (const lang of ['en', 'nl']) {
    // Filter products for current language
    const languageProducts = allProducts.filter((entry) => entry.id.startsWith(`${lang}/`));

    // Log for debugging
    console.log(`Found ${languageProducts.length} digital products for ${lang}`);
    console.log(
      'Product IDs:',
      languageProducts.map((product) => product.id)
    );

    for (const entry of languageProducts) {
      // Get the slug without the language prefix and extension
      const slug = entry.id.split('/')[1].replace(/\.mdx?$/, '');

      paths.push({
        params: { lang, slug },
        props: { entry },
      });
    }
  }

  // Log all generated paths for debugging
  console.log('Generated digital studio paths:', paths);

  return paths;
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Get current language
const currentLang = getLangFromUrl(Astro.url);
// Assert currentLang is a valid key for translations
const t = digitalStudioTranslations[currentLang as Language];

/* Removed console logs */
---

<DigitalProductLayout entry={entry}>
  <div class="container mx-auto px-6 py-16">
    <div class="prose prose-lg prose-invert max-w-none">
      <Content />
    </div>
  </div>
</DigitalProductLayout>
