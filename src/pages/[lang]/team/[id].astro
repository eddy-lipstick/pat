---
import { getCollection } from 'astro:content';
import { render } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getCaseStudies } from '../../../lib/case-studies';
import { Card, CardHeader, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { LinkedInLogoIcon } from '@radix-ui/react-icons';
import { Badge } from '@/components/ui/badge';
import Breadcrumb from '@/components/Breadcrumb';
import { languages, defaultLanguage } from '../../../i18n/config';

// Create translations object for UI elements
const translations = {
  en: {
    aboutUs: 'About Us',
    team: 'Team',
    contact: 'Contact',
    caseStudies: 'Case Studies',
  },
  nl: {
    aboutUs: 'Over ons',
    team: 'Team',
    contact: 'Contact',
    caseStudies: 'Case Studies',
  },
};

export async function getStaticPaths() {
  const team = await getCollection('team');

  return Object.keys(languages).flatMap((lang) => {
    const languageTeam = team.filter((member) => member.id.startsWith(`${lang}/`));

    return languageTeam.map((entry) => {
      // Remove the language prefix and .md extension from the id
      const id = entry.id.split('/').pop()?.replace('.md', '');
      return {
        params: {
          lang,
          id,
        },
        props: { entry, lang },
      };
    });
  });
}

const { entry, lang } = Astro.props;
const { Content } = await render(entry);
const t = translations[lang];

// Get case studies for this team member in the current language
const allCaseStudies = await getCaseStudies();
const relatedCaseStudies = allCaseStudies
  .filter((study) => study.id.startsWith(`${lang}/`))
  .filter((study) => study.data.team?.includes(entry.id.split('/').pop()));

const breadcrumbItems = [
  { label: t.aboutUs, href: `/${lang}/about` },
  { label: t.team, href: `/${lang}/team` },
  { label: entry.data.name },
];
---

<BaseLayout title={entry.data.name}>
  <Breadcrumb items={breadcrumbItems} client:load />

  <article class="mx-auto">
    <!-- Header Section -->
    <div class="flex flex-col md:flex-row gap-8 mb-12">
      <!-- Profile Image -->
      {
        entry.data.profileImage && (
          <div class="w-full md:w-1/3">
            <img
              src={entry.data.profileImage}
              alt={entry.data.name}
              class="w-full aspect-square object-cover rounded-lg shadow-lg"
            />
          </div>
        )
      }

      <!-- Profile Info -->
      <div class="flex-1">
        <h1 class="text-4xl font-bold mb-2">{entry.data.name}</h1>
        <p class="text-xl text-muted-foreground mb-4">{entry.data.role}</p>
        <p class="mb-6">{entry.data.bio}</p>

        <!-- Contact/Social Links -->
        <div class="flex gap-4">
          {
            entry.data.socialLinks?.email && (
              <Button variant="outline" asChild>
                <a href={`mailto:${entry.data.socialLinks.email}`}>{t.contact}</a>
              </Button>
            )
          }
          {
            entry.data.socialLinks?.linkedin && (
              <Button variant="outline" asChild>
                <a
                  href={entry.data.socialLinks.linkedin}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center gap-2"
                >
                  <LinkedInLogoIcon className="h-5 w-5" />
                  LinkedIn
                </a>
              </Button>
            )
          }
        </div>
      </div>
    </div>

    <!-- Extended Bio/Content -->
    <div class="prose prose-lg max-w-none mb-16 text-foreground">
      <Content />
    </div>

    <!-- Related Case Studies -->
    {
      relatedCaseStudies.length > 0 && (
        <section class="border-t pt-8">
          <h2 class="text-2xl font-semibold mb-6">{t.caseStudies}</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {relatedCaseStudies.map((study) => {
              const studyId = study.id.split('/').pop()?.replace('.md', '');
              return (
                <a href={`/${lang}/case-studies/${studyId}`}>
                  <Card>
                    <CardHeader>
                      <h3 class="text-xl font-semibold">{study.data.title}</h3>
                    </CardHeader>
                    <CardContent>
                      <p class="text-muted-foreground mb-4">{study.data.description}</p>
                      <div class="flex flex-wrap gap-2">
                        {study.data.tags.technologies.map((tag) => (
                          <Badge variant="secondary">{tag}</Badge>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                </a>
              );
            })}
          </div>
        </section>
      )
    }
  </article>
</BaseLayout>
