---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import { Card, CardHeader, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';

const newsItems = await getCollection('news');
const sortedNews = newsItems.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const getNewsIcon = (type) => {
  const iconMap = {
    speaking: "🎤",
    award: "🏆",
    news: "📰",
    project: "🚀"
  };
  return iconMap[type] || '📌';
};
---

<BaseLayout title="News & Updates | Legal Design Agency">
  <div class="min-h-screen space-y-8 relative">
    <!-- Hero section with animated background -->
    <div class="relative overflow-hidden py-12 mb-8">
      <div class=""></div>
      <div class="relative z-10 max-w-6xl mx-auto px-4">
        <h1 class="text-4xl md:text-5xl font-bold mb-4 text-text-primary">
Nieuws        </h1>
        <p class="text-lg text-text-secondary max-w-2xl">
Lees hier het laatste nieuws.        </p>
      </div>
    </div>

    <!-- News List -->
    <div class="max-w-6xl mx-auto px-4">
      <div class="grid gap-4">
        {sortedNews.map((item) => (
          <Card class="bg-surface-1 border-surface-2 overflow-hidden hover:bg-surface-2 transition-colors">
            <CardHeader class="space-y-4">
              <div class="flex justify-between items-start">
                <div class="space-y-2">
                  <div class="flex items-center gap-2">
                    <span class="mr-2">{getNewsIcon(item.data.type)}</span>
                    <h2 class="text-lg font-bold text-text-primary">
                      {item.data.title}
                    </h2>
                  </div>
                  <p class="text-text-secondary">
                    {item.data.summary}
                  </p>
                </div>
                <span class="text-sm text-text-tertiary whitespace-nowrap ml-4">
                  {new Date(item.data.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </span>
              </div>

              {item.data.labels && item.data.labels.length > 0 && (
                <div class="flex gap-2 flex-wrap">
                  {item.data.labels.map((label) => (
                    <Badge variant="secondary" class="bg-surface-2 text-text-secondary">
                      {label}
                    </Badge>
                  ))}
                </div>
              )}
            </CardHeader>

            <CardContent>
              {item.data.image && (
                <div class="mt-4">
                  <img 
                    src={item.data.image.src} 
                    alt={item.data.image.alt}
                    class="rounded-lg w-full h-48 object-cover" 
                  />
                </div>
              )}

              {item.data.link && (
                <div class="mt-4">
                  <a 
                    href={item.data.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center text-feitlijn-purple hover:text-feitlijn-purple/80 transition-colors group"
                  >
                    Read more 
                    <span class="ml-1 transform group-hover:translate-x-1 transition-transform">→</span>
                  </a>
                </div>
              )}
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>