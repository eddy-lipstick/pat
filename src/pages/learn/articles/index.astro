---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Hero from '@/components/Hero.astro';

// Get all articles
const articles = await getCollection('articles');

// Sort articles by date
const sortedArticles = [...articles].sort((a, b) => {
  try {
    return b.data.publishDate.getTime() - a.data.publishDate.getTime();
  } catch (error) {
    console.error('Date comparison error:', error);
    return 0;
  }
});

// Get all authors at once for better performance
const authors = await getCollection('team');
const authorsMap = new Map(authors.map((author) => [author.id, author]));
---

<BaseLayout title="Blog - Patroon">
  <Hero
    variant="small"
    subtitle="Blog"
    title="Juridische innovatie in de praktijk"
    description="Ontdek hoe legal design en technologie het juridische werkveld transformeren via onze artikelen, cases en analyses"
  />

  <section>
    <div class="grid grid-cols-1 gap-6" id="articles-grid">
      {
        sortedArticles.map((article) => {
          const author = authorsMap.get(article.data.author);

          return (
            <div class="article-card transform transition-all duration-300">
              <Card class="overflow-hidden hover:bg-accent/50 transition-colors border-l-2 border-l-transparent hover:border-l-primary">
                <a href={`/learn/articles/${article.id}`} class="block">
                  <div class="flex flex-col md:flex-row gap-6 p-6">
                    {article.data.coverImage && (
                      <div class="md:w-1/3">
                        <div class="aspect-video rounded-md overflow-hidden bg-muted">
                          <img
                            src={article.data.coverImage}
                            alt={article.data.title}
                            class="w-full h-full object-cover transform transition-transform duration-500 hover:scale-105"
                            loading="lazy"
                          />
                        </div>
                      </div>
                    )}
                    <div class={article.data.coverImage ? 'md:w-2/3' : 'w-full'}>
                      <div class="flex items-center gap-2 text-sm text-muted-foreground mb-2">
                        <time datetime={article.data.publishDate.toISOString()}>
                          {article.data.publishDate.toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric',
                          })}
                        </time>
                        {author && (
                          <>
                            <span class="text-muted-foreground">•</span>
                            <a
                              href={`/team/${author.id}`}
                              class="hover:text-primary transition-colors"
                            >
                              {author.data.name}
                            </a>
                          </>
                        )}
                        {article.data.readingTime && (
                          <>
                            <span class="text-muted-foreground">•</span>
                            <span>{article.data.readingTime} min read</span>
                          </>
                        )}
                      </div>

                      <h2 class="text-2xl font-bold mb-2 text-foreground hover:text-primary transition-colors">
                        {article.data.title}
                      </h2>
                      <p class="text-muted-foreground mb-4 line-clamp-2">
                        {article.data.description}
                      </p>

                      <div class="flex flex-wrap gap-2">
                        {article.data.tags.map((tag) => (
                          <span
                            class="bg-primary/10 text-primary px-2 py-1 rounded-full text-xs transition-all duration-300 hover:bg-primary/20"
                            data-tag={tag}
                          >
                            {tag}
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                </a>
              </Card>
            </div>
          );
        })
      }
    </div>

    {/* No Articles Found State */}
    {
      sortedArticles.length === 0 && (
        <div class="text-center py-12">
          <p class="text-muted-foreground">No articles found.</p>
        </div>
      )
    }
  </section>
</BaseLayout>

<style>
  .article-card {
    transition: all 0.3s ease-out;
  }

  .article-card.hidden {
    opacity: 0;
    transform: translateY(20px);
    pointer-events: none;
  }
</style>
