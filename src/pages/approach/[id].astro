---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, getEntry, render } from 'astro:content';
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { ArrowRight, ArrowLeft } from 'lucide-react';
import CaseStudyCard from '@/components/CaseStudyCard';

export async function getStaticPaths() {
  const approaches = await getCollection('approach');
  const caseStudies = await getCollection('case-studies');
  
  // Sort approaches alphabetically
  const sortedApproaches = approaches.sort((a, b) => 
    a.data.title.localeCompare(b.data.title, 'nl')
  );
  
  return sortedApproaches.map((approach) => {
    const id = approach.id.split('/').pop()?.replace('.md', '');
    
    // Find case studies that reference this approach
    const relatedCases = caseStudies.filter(cs => 
      cs.data.metadata?.relatedSkills?.some(skill => 
        skill.toLowerCase() === approach.data.title.toLowerCase()
      )
    );
    
    return {
      params: { id },
      props: { 
        approach,
        relatedCases,
      },
    };
  });
}

const { approach, relatedCases } = Astro.props;
const { Content } = await render(approach);

// Get all approaches and sort them alphabetically
const allApproaches = await getCollection('approach');
const sortedApproaches = allApproaches.sort((a, b) => 
  a.data.title.localeCompare(b.data.title, 'nl')
);

// Find current index in sorted list
const currentIndex = sortedApproaches.findIndex(a => a.id === approach.id);

// Get previous and next approaches with looping
const prevApproach = currentIndex > 0 
  ? sortedApproaches[currentIndex - 1] 
  : sortedApproaches[sortedApproaches.length - 1];  // Loop to end

const nextApproach = currentIndex < sortedApproaches.length - 1 
  ? sortedApproaches[currentIndex + 1] 
  : sortedApproaches[0];  // Loop to beginning
---

<BaseLayout title={approach.data.title}>
  <div class="py-16 max-w-6xl mx-auto px-4">
    <!-- Back Navigation -->
    <a 
      href="/approach" 
      class="inline-flex items-center gap-2 text-text-secondary hover:text-primary mb-8 transition-colors"
    >
      <ArrowLeft className="h-4 w-4" />
      Terug naar overzicht
    </a>

    <!-- Hero -->
    <h1 class="text-5xl font-bold mb-6">{approach.data.title}</h1>
    <p class="text-xl text-text-secondary mb-16">{approach.data.description}</p>
    
    <!-- Content -->
    <div class="prose prose-invert max-w-none mb-16">
      <Content />
    </div>

    <!-- Benefits -->
    <section class="mb-16">
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">Voordelen</CardTitle>
        </CardHeader>
        <CardContent>
          <p class="text-lg mb-6">{approach.data.benefits.description}</p>
          <div class="grid sm:grid-cols-2 gap-4">
            {approach.data.benefits.metrics.map((metric) => (
              <div class="bg-surface-2 rounded-lg p-4">
                <p class="text-text-secondary">{metric}</p>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </section>


    <!-- Related Cases -->
    {relatedCases.length > 0 && (
      <section class="mb-16">
        <h2 class="text-2xl font-bold mb-6">Bekijk projecten</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedCases.map(study => (
            <CaseStudyCard study={study} />
          ))}
        </div>
      </section>
    )}

  <!-- Navigation -->
  <nav class="grid grid-cols-2 gap-4 border-t border-border/50 pt-8">
    <a 
      href={`/approach/${prevApproach.id.split('/').pop()?.replace('.md', '')}`}
      class="group flex items-center gap-3 hover:text-primary transition-colors"
    >
      <ArrowLeft className="h-4 w-4" />
      <div>
        <div class="text-sm text-text-secondary">Vorige</div>
        <div class="font-medium group-hover:text-primary transition-colors">{prevApproach.data.title}</div>
      </div>
    </a>
    <a 
      href={`/approach/${nextApproach.id.split('/').pop()?.replace('.md', '')}`}
      class="group flex items-center justify-end gap-3 hover:text-primary transition-colors ml-auto"
    >
      <div class="text-right">
        <div class="text-sm text-text-secondary">Volgende</div>
        <div class="font-medium group-hover:text-primary transition-colors">{nextApproach.data.title}</div>
      </div>
      <ArrowRight className="h-4 w-4" />
    </a>
  </nav>
  </div>
</BaseLayout>