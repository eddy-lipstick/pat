---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { ArrowRight, ArrowLeft } from 'lucide-react';

export async function getStaticPaths() {
 const skills = await getCollection('approach');
 return skills.map(skill => ({
   params: { skill: skill.slug },
   props: { skill },
 }));
}

const { skill } = Astro.props;
const { Content } = await skill.render();

const allSkills = await getCollection('approach');
const currentIndex = allSkills.findIndex(s => s.slug === skill.slug);
const prevSkill = currentIndex > 0 ? allSkills[currentIndex - 1] : null;
const nextSkill = currentIndex < allSkills.length - 1 ? allSkills[currentIndex + 1] : null;
---

<BaseLayout title={skill.data.title}>
 <div class="py-16 max-w-4xl mx-auto px-4">
   {/* Back Navigation */}
   <a 
     href="/approach" 
     class="inline-flex items-center gap-2 text-text-secondary hover:text-primary mb-8 transition-colors"
   >
     <ArrowLeft className="h-4 w-4" />
     Terug naar overzicht
   </a>

   {/* Hero */}
   <h1 class="text-5xl font-bold mb-6">{skill.data.title}</h1>
   <p class="text-xl text-text-secondary mb-16">{skill.data.description}</p>
   {/* Content */}
   <div class="prose prose-invert max-w-none mb-16">
    <Content />
  </div>



   {/* Benefits */}
   <section class="mb-16">
     <Card className="">
       <CardHeader>
         <CardTitle className="text-2xl">Voordelen</CardTitle>
       </CardHeader>
       <CardContent>
         <p class="text-lg mb-6">{skill.data.benefits.description}</p>
         <div class="grid sm:grid-cols-2 gap-4">
           {skill.data.benefits.metrics.map((metric) => (
             <div class="bg-surface-2 rounded-lg p-4">
               <p class="text-text-secondary">{metric}</p>
             </div>
           ))}
         </div>
       </CardContent>
     </Card>
   </section>


   {/* Featured Cases */}
   {skill.data.featuredCases && skill.data.featuredCases.length > 0 && (
     <section class="mb-16">
       <h2 class="text-2xl font-bold mb-6">Uitgelichte projecten</h2>
       <div class="grid sm:grid-cols-2 gap-6">
         {skill.data.featuredCases.map((case_) => (
           <a href={`/cases/${case_.slug}`} class="group">
             <Card className="h-full border border-border/50 bg-surface-1 hover:bg-surface-2 transition-all duration-300">
               <CardContent className="p-6">
                 <h3 class="text-xl font-bold mb-2">{case_.title}</h3>
                 <p class="text-text-secondary mb-4">{case_.result}</p>
                 <div class="flex items-center gap-2 text-primary group-hover:gap-4 transition-all duration-300">
                   <span>Bekijk project</span>
                   <ArrowRight className="h-4 w-4" />
                 </div>
               </CardContent>
             </Card>
           </a>
         ))}
       </div>
     </section>
   )}

   {/* Previous/Next Navigation */}
   <nav class="grid grid-cols-2 gap-4 border-t border-border/50 pt-8">
     {prevSkill && (
       <a 
         href={`/approach/${prevSkill.slug}`}
         class="group flex items-center gap-3 hover:text-primary transition-colors"
       >
         <ArrowLeft className="h-4 w-4" />
         <div>
           <div class="text-sm text-text-secondary">Vorige</div>
           <div class="font-medium">{prevSkill.data.title}</div>
         </div>
       </a>
     )}
     {nextSkill && (
       <a 
         href={`/approach/${nextSkill.slug}`}
         class="group flex items-center justify-end gap-3 hover:text-primary transition-colors ml-auto"
       >
         <div class="text-right">
           <div class="text-sm text-text-secondary">Volgende</div>
           <div class="font-medium">{nextSkill.data.title}</div>
         </div>
         <ArrowRight className="h-4 w-4" />
       </a>
     )}
   </nav>
 </div>
</BaseLayout>