---
// src/components/Hero.astro
import { Button } from '@/components/ui/button';
import { cn } from '@/lib/utils';

interface Props {
  variant?: 'default' | 'small'; // Add variant prop
  subtitle: string;
  title: string;
  description?: string; // Make description optional
  bulletPoints?: string[];
  primaryButtonText?: string;
  primaryButtonHref?: string;
  secondaryButtonText?: string;
  secondaryButtonHref?: string;
  class?: string;
}

const {
  variant = 'default',
  subtitle,
  title,
  description = '', // Provide a default empty string if description is optional
  bulletPoints = [],
  primaryButtonText,
  primaryButtonHref = '#',
  secondaryButtonText,
  secondaryButtonHref = '#',
  class: className = '',
} = Astro.props;
---

<section
  class={cn(
    'relative overflow-visible flex items-center',
    // Variant-specific classes
    variant === 'default' && 'min-h-screen',
    variant === 'small' && 'py-12 lg:py-24',
    className
  )}
>
  <div
    class={cn(
      'grid grid-cols-1 lg:grid-cols-2 items-center relative gap-8',
      variant === 'small' && 'gap-4 lg:gap-8'
    )}
  >
    <!-- Left Content -->
    <div
      class={cn('flex flex-col', variant === 'default' && 'gap-8', variant === 'small' && 'gap-4')}
    >
      <div class="flex flex-col gap-4">
        <p class="text-indigo-400 text-xl">{subtitle}</p>

        <h1
          class={cn(
            'font-bold text-text-primary',
            variant === 'default' && 'text-5xl lg:text-6xl',
            variant === 'small' && 'text-4xl lg:text-5xl'
          )}
        >
          {title}
        </h1>

        <p
          class={cn(
            'text-text-secondary max-w-2xl',
            variant === 'default' && 'text-xl',
            variant === 'small' && 'text-lg'
          )}
        >
          {description}
        </p>
      </div>

      {
        bulletPoints.length > 0 && (
          <ul class="flex flex-col gap-3">
            {bulletPoints.map((point) => (
              <li class="flex items-start gap-2">
                <span class="text-feitlijn-purple">â†’</span>
                <span
                  class={cn(
                    'text-text-secondary',
                    variant === 'default' && 'text-lg',
                    variant === 'small' && 'text-base'
                  )}
                >
                  {point}
                </span>
              </li>
            ))}
          </ul>
        )
      }

      <div class="flex flex-col sm:flex-row gap-4">
        {
          primaryButtonText && (
            <a href={primaryButtonHref} class="w-full sm:w-auto">
              <Button variant="default" size="lg" className="w-full">
                {' '}
                {/* Use className */}
                {primaryButtonText}
              </Button>
            </a>
          )
        }

        {
          secondaryButtonText && (
            <a href={secondaryButtonHref} class="w-full sm:w-auto">
              <Button variant="outline" size="lg" className="w-full">
                {' '}
                {/* Use className */}
                {secondaryButtonText}
              </Button>
            </a>
          )
        }
      </div>
    </div>

    <!-- Right Content -->
    <!-- Right Content -->
    <div class="relative w-full lg:w-auto">
      <div class="w-full h-full">
        <slot />
      </div>
    </div>
  </div>
</section>
